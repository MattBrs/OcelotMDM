definitions:
  github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.AddBinaryRequest:
    properties:
      architecture:
        type: string
      data:
        type: string
      name:
        type: string
      version:
        type: string
    required:
    - architecture
    - data
    - name
    - version
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.AddBinaryResponse:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.GetBinaryResponse:
    properties:
      binary_data:
        type: string
      binary_name:
        type: string
      binary_version:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.ResponseErr:
    properties:
      error:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.AddNewCommandActionRequest:
    properties:
      default_priority:
        type: integer
      description:
        type: string
      name:
        type: string
      payload_required:
        type: boolean
      required_online:
        type: boolean
      token_required:
        type: boolean
    required:
    - default_priority
    - description
    - name
    - payload_required
    - required_online
    - token_required
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.AddNewCommandActionResponse:
    properties:
      _id:
        type: string
      name:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.DeleteCommandActionRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ListCommandActionResponse:
    properties:
      command_actions:
        items:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_domain_command_action.CommandAction'
        type: array
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr:
    properties:
      error:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.AddNewCommadRequest:
    properties:
      callback_secret:
        type: string
      callback_url:
        type: string
      command_action_name:
        type: string
      device_name:
        type: string
      payload:
        type: string
      priority:
        type: integer
    required:
    - command_action_name
    - device_name
    - priority
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.AddNewCommadResponse:
    properties:
      command_action_name:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_domain_command.CommandStatus'
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ListCommandsResponse:
    properties:
      commands:
        items:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_domain_command.Command'
        type: array
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr:
    properties:
      error:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.UpdateCommandStatusRequest:
    properties:
      error_description:
        type: string
      id:
        type: string
      status:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.UpdateCommandStatusResponse:
    properties:
      id:
        type: string
      new_status:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationRequest:
    properties:
      architecture:
        type: string
      otp:
        type: string
      type:
        type: string
    required:
    - architecture
    - otp
    - type
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationResponse:
    properties:
      name:
        description: 'TODO: add needed client certificates and configurations in the
          response'
        type: string
      ovpn_file:
        type: string
    required:
    - name
    - ovpn_file
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.UpdateAddressRequest:
    properties:
      ip_address:
        type: string
      name:
        type: string
    required:
    - ip_address
    - name
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_token_dto.NewTokenResponse:
    properties:
      expires_at:
        type: string
      token:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_token_dto.NewTokenResponseErr:
    properties:
      error:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.CreateUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.CreateUserResponse:
    properties:
      error:
        type: string
      username:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserResponse:
    properties:
      error:
        type: string
      token:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusRequest:
    properties:
      enabled:
        type: boolean
      username:
        type: string
    required:
    - enabled
    - username
    type: object
  github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusResponseErr:
    properties:
      error:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_domain_command.Command:
    properties:
      callbackSecret:
        type: string
      callbackURL:
        type: string
      commandActionName:
        type: string
      completedAt:
        type: string
      createdAt:
        type: string
      data:
        type: string
      deviceName:
        type: string
      errorDescription:
        type: string
      id:
        type: string
      payload:
        type: string
      priority:
        type: integer
      queueID:
        type: string
      queuedAt:
        type: string
      requestedBy:
        type: string
      requiredOnline:
        type: boolean
      status:
        $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_domain_command.CommandStatus'
      tokenRequired:
        type: boolean
    type: object
  github_com_MattBrs_OcelotMDM_internal_domain_command.CommandStatus:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  github_com_MattBrs_OcelotMDM_internal_domain_command_action.CommandAction:
    properties:
      defaultPriority:
        type: integer
      description:
        type: string
      id:
        type: string
      name:
        type: string
      payloadRequired:
        type: boolean
      requiredOnlne:
        type: boolean
      tokenRequired:
        type: boolean
    type: object
  github_com_MattBrs_OcelotMDM_internal_domain_device.Device:
    properties:
      architecture:
        type: string
      id:
        type: string
      ipaddress:
        type: string
      lastSeen:
        type: integer
      name:
        type: string
      status:
        type: string
      supportedCommands:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
info:
  contact: {}
paths:
  /binary/add:
    post:
      consumes:
      - application/json
      description: Uploads a file to the chosen file_repository, that could be aws
        s3, google cloud or wathever is implemented under the hood
      parameters:
      - description: binary data
        in: body
        name: binary
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.AddBinaryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.AddBinaryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.ResponseErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.ResponseErr'
      security:
      - JWT: []
      summary: Adds a new bynary to the file_repository (could be aws s3, google cloud,
        etc)
      tags:
      - binary
  /binary/get:
    get:
      consumes:
      - application/json
      description: returns a binary from the file repository. The file data is encoded
        in base64
      parameters:
      - description: OTP token for auth
        in: query
        name: token
        required: true
        type: string
      - description: binary / file name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.GetBinaryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.ResponseErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_binary_dto.ResponseErr'
      summary: returns a binary from the file repository.
      tags:
      - binary
  /command/list:
    get:
      consumes:
      - application/json
      description: Shows a list of all enqueued commands, with their status and other
        information useful for debugging the command operations. The list is filtered
        with some parameters
      parameters:
      - description: Command ID
        in: query
        name: id
        type: string
      - description: Target device name
        in: query
        name: deviceName
        type: string
      - description: Status
        in: query
        name: status
        type: string
      - description: Priority
        in: query
        name: priority
        type: string
      - description: Requested by
        in: query
        name: requestedBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ListCommandsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr'
      security:
      - JWT: []
      summary: Lists the previously enqueued commands applying a filter
      tags:
      - command
  /command/new:
    post:
      consumes:
      - application/json
      description: Lets a user create a command that will be enqueued as soon as possible
        to the mqtt topic of the target device. What determines the actual action
        of the command (what the command do when is read by the device) is the command_action
      parameters:
      - description: command data
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.AddNewCommadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.AddNewCommadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr'
      security:
      - JWT: []
      summary: Creates a new commmand that is enqueued to the device
      tags:
      - command
  /command/update/status:
    post:
      consumes:
      - application/json
      description: Lets a user update the status of an enqueue command manually (enqueued,
        acknowledged, completed, errored)
      parameters:
      - description: command data
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.UpdateCommandStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.UpdateCommandStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr'
      security:
      - JWT: []
      summary: Updates an enqueued command status
      tags:
      - command
  /command_actions/delete:
    post:
      consumes:
      - application/json
      description: deletes a command action by name (which is unique)
      parameters:
      - description: command action name
        in: body
        name: command_action
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.DeleteCommandActionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.AddNewCommandActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr'
      security:
      - JWT: []
      summary: Deletes a command action
      tags:
      - command_actions
  /command_actions/list:
    get:
      consumes:
      - application/json
      description: Returns a list of the created command_actions. The command actions
        are filtered by some attributes.
      parameters:
      - description: Command action name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ListCommandActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr'
      security:
      - JWT: []
      summary: Returns a list of the created command_actions. With filter.
      tags:
      - command_actions
  /command_actions/new:
    post:
      consumes:
      - application/json
      description: 'Creates a new commmand action that is then used to create commands.
        What a command does is determined by a command_action. Example: command_action=''install_binary'',
        the new command that is enqueued with this command action will install a binary.'
      parameters:
      - description: command action data
        in: body
        name: command_action
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.AddNewCommandActionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.AddNewCommandActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_action_dto.ResponseErr'
      security:
      - JWT: []
      summary: Creates a new commmand action that is then used to create commands
      tags:
      - command_actions
  /devices:
    get:
      consumes:
      - application/json
      description: show a filtered list of the devices previously enrolled
      parameters:
      - description: Device ID
        in: query
        name: id
        type: string
      - description: Device Status
        in: query
        name: status
        type: string
      - description: Device Name
        in: query
        name: name
        type: string
      - description: Device Architecture
        in: query
        name: architecture
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_domain_device.Device'
            type: array
      security:
      - JWT: []
      summary: show a filtered list of the devices
      tags:
      - devices
    post:
      consumes:
      - application/json
      description: enroll device
      parameters:
      - description: Device Data
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationResponse'
      summary: enroll a new device to the network
      tags:
      - devices
  /devices/updateAddress:
    post:
      consumes:
      - application/json
      description: update known device ip address
      parameters:
      - description: Device New address
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.UpdateAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationResponse'
      security:
      - JWT: []
      summary: update device address
      tags:
      - devices
  /token/generate:
    post:
      consumes:
      - application/json
      description: generates an OTP to be used for some operations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_token_dto.NewTokenResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_token_dto.NewTokenResponseErr'
      security:
      - JWT: []
      summary: Generates OTP
      tags:
      - token
  /user/create:
    post:
      consumes:
      - application/json
      description: Create a new user account with username and password. Default disabled
      parameters:
      - description: User account
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.CreateUserResponse'
      summary: Create a new User account
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: Lets a user login with his credentials to obtain a JWT token to
        use in other API calls
      parameters:
      - description: User account
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserResponse'
      summary: Login a User account. Provides JWT
      tags:
      - user
  /user/update/enabled:
    post:
      consumes:
      - application/json
      description: Lets a user login with his credentials to obtain a JWT token to
        use in other API calls
      parameters:
      - description: User account
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusResponseErr'
      security:
      - JWT: []
      summary: Login a User account. Provides JWT
      tags:
      - user
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
