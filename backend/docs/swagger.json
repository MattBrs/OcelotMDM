{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/command/list": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Shows a list of all enqueued commands, with their status and other information useful for debugging the command operations. The list is filtered with some parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "command"
                ],
                "summary": "Lists the previously enqueued commands applying a filter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Command ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Target device name",
                        "name": "deviceName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Priority",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Requested by",
                        "name": "requestedBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ListCommandsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr"
                        }
                    }
                }
            }
        },
        "/command/new": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Lets a user create a command that will be enqueued as soon as possible to the mqtt topic of the target device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "command"
                ],
                "summary": "Creates a new commmand that is enqueued to the device",
                "parameters": [
                    {
                        "description": "command data",
                        "name": "command",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.AddNewCommadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.AddNewCommadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr"
                        }
                    }
                }
            }
        },
        "/command/update/status": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Lets a user update the status of an enqueue command manually (enqueued, acknowledged, completed, errored)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "command"
                ],
                "summary": "Updates an enqueued command status",
                "parameters": [
                    {
                        "description": "command data",
                        "name": "command",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.UpdateCommandStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.UpdateCommandStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr"
                        }
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "show a filtered list of the devices previously enrolled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "show a filtered list of the devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Device Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Device Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Device Architecture",
                        "name": "architecture",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_domain_device.Device"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "enroll device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "enroll a new device to the network",
                "parameters": [
                    {
                        "description": "Device Data",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationResponse"
                        }
                    }
                }
            }
        },
        "/devices/updateAddress": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "update known device ip address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "update device address",
                "parameters": [
                    {
                        "description": "Device New address",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.UpdateAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationResponse"
                        }
                    }
                }
            }
        },
        "/token/generate": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "generates an OTP to be used for some operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Generates OTP",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_token_dto.NewTokenResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_token_dto.NewTokenResponseErr"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "Create a new user account with username and password. Default disabled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a new User account",
                "parameters": [
                    {
                        "description": "User account",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.CreateUserResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Lets a user login with his credentials to obtain a JWT token to use in other API calls",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login a User account. Provides JWT",
                "parameters": [
                    {
                        "description": "User account",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserResponse"
                        }
                    }
                }
            }
        },
        "/user/update/enabled": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Lets a user login with his credentials to obtain a JWT token to use in other API calls",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login a User account. Provides JWT",
                "parameters": [
                    {
                        "description": "User account",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusResponseErr"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusResponseErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.AddNewCommadRequest": {
            "type": "object",
            "required": [
                "command_action_name",
                "device_name",
                "priority"
            ],
            "properties": {
                "command_action_name": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.AddNewCommadResponse": {
            "type": "object",
            "properties": {
                "command_action_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_domain_command.CommandStatus"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ListCommandsResponse": {
            "type": "object",
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_domain_command.Command"
                    }
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.ResponseErr": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.UpdateCommandStatusRequest": {
            "type": "object",
            "properties": {
                "error_description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_command_dto.UpdateCommandStatusResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "new_status": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationRequest": {
            "type": "object",
            "required": [
                "architecture",
                "otp",
                "type"
            ],
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.DeviceCreationResponse": {
            "type": "object",
            "required": [
                "name",
                "ovpn_file"
            ],
            "properties": {
                "name": {
                    "description": "TODO: add needed client certificates and configurations in the response",
                    "type": "string"
                },
                "ovpn_file": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_device_dto.UpdateAddressRequest": {
            "type": "object",
            "required": [
                "ip_address",
                "name"
            ],
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_token_dto.NewTokenResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_token_dto.NewTokenResponseErr": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.CreateUserRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.CreateUserResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.LoginUserResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusRequest": {
            "type": "object",
            "required": [
                "enabled",
                "username"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_api_dto_user_dto.UpdateUserEnableStatusResponseErr": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_domain_command.Command": {
            "type": "object",
            "properties": {
                "commandActionName": {
                    "type": "string"
                },
                "completedAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "deviceName": {
                    "type": "string"
                },
                "errorDescription": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "queueID": {
                    "type": "string"
                },
                "queuedAt": {
                    "type": "string"
                },
                "requestedBy": {
                    "type": "string"
                },
                "requiredOnline": {
                    "type": "boolean"
                },
                "status": {
                    "$ref": "#/definitions/github_com_MattBrs_OcelotMDM_internal_domain_command.CommandStatus"
                },
                "tokenRequired": {
                    "type": "boolean"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_domain_command.CommandStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_MattBrs_OcelotMDM_internal_domain_device.Device": {
            "type": "object",
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipaddress": {
                    "type": "string"
                },
                "lastSeen": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "supportedCommands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}